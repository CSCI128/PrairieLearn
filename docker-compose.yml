services:
  pl:
    build:
      context: .
    image: prairielearn/prairielearn:local
    working_dir: "/PrairieLearn"
    command: 
      - make
      - migrate
      - start
    volumes:
      - course-data:/data1/courses
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOME}/pl_ag_jobs:/jobs
      - ./secrets/ssh/:/root/.ssh
    environment:
      - HOST_JOBS_DIR=${HOME}/pl_ag_jobs
      - NODE_ENV=production
      - CONFIG_FILE_PATH=/run/secrets/pl_config
      - PGHOST=postgres
      - REDISHOST=redis
    healthcheck:
      test: curl --fail http://localhost:3000/pl/webhooks/ping || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    secrets:
      - pl_config
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - internal
      - external
    deploy:
      mode: replicated
      replicas: 2

  redis:
    image: redis:alpine
    command: --save 60 1 --loglevel debug
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis-data:/data
    networks:
      - internal

  postgres:
    image: postgres:16.3-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=pl
      - POSTGRES_DB=pl
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_password
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s
    secrets:
      - pg_password
    networks:
      - internal

  backus.mines.edu:
    image: nginx:stable-alpine
    volumes:
      - ./secrets/ssl/backus.mines.edu.key:/etc/ssl/backus.mines.edu.key:ro
      - ./secrets/ssl/backus.mines.edu.cert:/etc/ssl/backus.mines.edu.cert:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "443:443"
      - "80:80"
    networks:
      - external
    depends_on:
      pl:
        condition: service_healthy


volumes:
  postgres-data: 
  redis-data:
  course-data:


networks:
  internal:
  external:

secrets:
  pl_config:
    file: ./config.json
  pg_password:
    file: ./secrets/pg_password
